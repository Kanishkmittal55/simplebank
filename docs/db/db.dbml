Project simple_banl {
  database_type: 'PostgreSQL'
  Note: '''
    **markdown content here**
  '''
}

Table users as U {
  username varchar [pk]
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  password_change_at timestamptz [not null, default:'0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]
}

Table mentor {
  id bigserial [pk]
  pic varchar(2048)
  username varchar
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  password_change_at timestamptz [not null, default:'0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]

}

Table career {
  id bigserial [pk]
  name varchar [not null]
  sector varchar [not null]
  eta varchar [not null]
  blog varchar(2048)
  estimated_income int [not null]
}

Table sessions {
  id uuid [pk]
  username varchar [not null]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: false]
  expires_at timestamptz [not null]
  created_at timestamptz [not null, default: `now()` ] 
}

Table "accounts" {
  "id" bigserial [pk, increment]
  "owner" varchar [ref: > U.username, not null]
  "balance" bigint [not null]
  "currency" varchar [not null]
  "created_at" timestamptz [not null, default: `now()`]

Indexes {
  owner
  (owner, currency) [unique]
}
}

Table "entries" {
  "id" bigserial [pk, increment]
  "account_id" bigint [not null]
  "amount" bigint [not null, note: 'can be negative or positive']
  "created_at" timestamptz [default: `now()`]

Indexes {
  account_id
}
}

Table "transfers" {
  "id" bigserial [pk, increment]
  "from_account_id" bigint [not null]
  "to_account_id" bigint [not null]
  "amount" bigint [not null, note: 'Must be positive']
  "created_at" timestamptz [default: `now()`]

Indexes {
  from_account_id
  to_account_id
  (from_account_id, to_account_id)
}
}

Ref:"accounts"."id" < "entries"."account_id"

Ref:"accounts"."id" < "transfers"."from_account_id"

Ref:"accounts"."id" < "transfers"."to_account_id"


Ref: "mentor"."username" < "accounts"."owner"

Ref: "mentor"."id" - "career"."id"

Ref: "users"."username" < "sessions"."username"